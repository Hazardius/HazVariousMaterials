<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Wizerunek.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAATU0AKgAAAAgAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCABLADcDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDmtL07T30jTmOmWBLW
        sRYtaxsWOwEkkjJJOTV3+ydNf7um6cDjkfY4v/iam0K2kfQNOdYWI+xxfNggY8sZOelbUGgyyyLtmVmb
        PEQ3dOuDwpP415U5T5nZndFRsc3HpmnuCTpunDH/AE5xf/E1E2naeSNum2H/AIBxf/E12EWhKVUEq7yw
        GdEfI3/KDgAfUc57GklCroEV/ZMkErEq6oqrtIP3RkFjxluvQUrz7h7vY5AafYYx/ZlgT6/ZIuf/AB2n
        yaZp4Hy6dp4OOn2OL/4mrt3G0kcVwTnzMq59HH/1sGqUhIAz9M1PPLuVyrsY/iCys08Naoy2NkkkcaMj
        x2yIynzUB5UDsxFFP17nwvq/P/LFP/R0dFehhm3DU5aySlodt4PkFnpeiysVZJ7GJclgChwOQT3GB+db
        ctzDC9r9iuGkksG+ZY4ywlT144GAzA/j61y3hkNJ4ZtQu0vb2sFzGrDIbCKGBHfjB/4Ca6sXrNLYXsRB
        3WzI8S8kMOo2jnDFf1rkk9WbLZElvezusBtIA6+Y81oJ5AMAHlVAzjgkYz0FOW0KWN4WkEccch86CJAg
        AKfeyxJ5U47HJxWfHcRWszLFIqRx3IlRZTtKDGGXHJ56dKlTX1+0nLiRmRVdwmN20kqSW78/3aSkuo7P
        oYWo2ypd3lhbqxjVjLC2c7lAyD/3yf0rCcMo654rp73VWh2eVCgZE8pJZSXdF5GB2HB9K5ySPccDjjHN
        YytfQtGLrpz4a1j18hP/AEfHRS68pXw3q4I/5YJz/wBt4qK9HC/Actf4jd8OTzW1jpksTbW+yRAHPHMY
        HI9Patme/u7nMUkrBcfdQ7V/IYFc9o8m3SdPIPItIf8A0WK2EByrnc+ByO9cE37zOmK0QQ5WVVDZXPek
        m5kOCEbdkZNWVdT0G0AZPy8iqtwwc5BGDjOByTUjIX3vE4ZslWz1qu2SM/rU5HVOMHkc03d/CcHHvSGY
        fiQL/wAIzq2OvkR5/wC/0dFO8TAf8IzqxAwPIQf+R46K9LC/Aclf4jQ0gJ/YuncDebWEZPb5FrRMg2Yc
        EY9GrP0ZQ2jaf8wB+yQ8H/rmtWdjZLBx8voK4KnxM6o7Ie74ORJnIwfaoywZSOnHFNLc+vamHpUFDyCR
        zz9KeEJAIx681EHwODzQX7mgDL8Tn/imNWGR/qYzx/13jopniRs+F9WGf+WKf+j46K9LC/Acdf4jQ0dl
        TSdP3L/y6Q85/wCma1ZDI0yhpNqkgMx5wK8wi8X65DbxQJdx+XEixput4mIVRgDJXJwBjmnf8Jlrv/P1
        F/4Cxf8AxNZSwsm73NFXilY9PZIOouk6AkENwe46fjTStt8oN3GRuAJVWyB68gf5NeY/8Jjrh/5eof8A
        wEh/+Jo/4TDW/wDn5h/8BIf/AImp+qS7oPbxPS5XtgmY5WJAGFK4qDzF29R9K87/AOEw1vOftMP/AICQ
        /wDxNJ/wl+t/8/MP/gJD/wDE0fVJdx+3idlr7bvDGrgdoI//AEfFRXEXfijV76yls57lDBLjzFSCNN2C
        CMlVB6gUV10abpxszCpNSd0f/9k=
</value>
  </data>
</root>